/*
 * –ü—Ä–æ—Ç–æ—Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞
 *
 * - https://miro.com/app/board/o9J_ku0WE0g=/
 * - Object.create()
 * - [[Prototype]] –∏ __proto__
 * - Object.getPrototypeOf()
 * - –°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –∏ Object.prototype.hasOwnProperty()
 * - –¶–µ–ø–æ—á–∫–∞ –ø—Ä–æ—Ç–æ—Ç–∏–ø–æ–≤
 */


// const objC = {
//     z: 5,
// };

// const objB = Object.create(objC);
// objB.y = 2;

// const objA = Object.create(objB);
// objA.x = 1;

// console.log(objA.z);
// console.log('objA', objA);
// console.log(objA.hasOwnProperty('x'));
// const dummyObj = Object.create({ message: '–≠—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–∞ –ø—Ä–æ—Ç–æ—Ä—Ç–∏–ø–∞' });
// dummyObj.message = '–≠—Ç–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–∞';
// console.log('dummyObj', dummyObj);

// console.log(dummyObj.message);

//  '–≠—Ç–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–∞'
//  '–≠—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ –Ω–∞ –æ–±—ä–µ–∫—Ç–µ-–ø—Ä–æ—Ç–æ—Ç–∏–ø–µ'

/*
 * –ê–ª–≥–æ—Ä–∏—Ç–º –ø–æ–∏—Å–∫–∞ —Å–≤–æ–π—Å—Ç–≤–∞ –≤ —Ü–µ–ø–æ—á–∫–µ –ø—Ä–æ—Ç–æ—Ç–∏–ø–æ–≤:
 * 1. –ü–æ–∏—Å–∫ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤–∞—Ö
 * 2. –ï—Å–ª–∏ —Å–≤–æ–π—Å—Ç–≤–∞ –Ω–µ—Ç –≤ —Å–æ–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö, –ø–æ–∏—Å–∫ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —Ü–µ–ø–æ—á–∫–µ –ø—Ä–æ—Ç–æ—Ç–∏–ø–æ–≤
 * 3. –ü–æ–∏—Å–∫ –ø—Ä–µ–∫—Ä–∞—â–∞–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏ (–µ—Å—Ç—å —Ç–∞–∫–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ)
 * 4. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞
 */

// const objA = Object.create({ z: 5 });
// objA.y = 100;
// console.log('objA', objA);

// console.log(objA.x);
// =======================================================
 /*
 * –û—Å–Ω–æ–≤—ã –û–û–ü: –∫–ª–∞—Å—Å, —ç–∫–∑–µ–º–ø–ª—è—Ä (–æ–±—ä–µ–∫—Ç), –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
 */

/*
 * –§—É–Ω–∫—Ü–∏–∏-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã
 * - –ò–º–µ–Ω–æ–≤–∞–Ω–∏–µ
 * - –û–ø–µ—Ä–∞—Ç–æ—Ä new
 * - –°–≤–æ–π—Å—Ç–≤–æ Function.prototype
 */
// const Car = function ({ brand, model, price } = {}) {
//       // const { brand, model, price } = config;
//   // 2. –§—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞,
//   //    —Ç–æ –µ—Å—Ç—å –≤ this –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–µ–≥–æ
//     this.brand = brand;
//     this.model = model;
//     this.price = price;
//       // 3. –í —Å–≤–æ–π—Å—Ç–≤–æ this.__proto__ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–±—å–µ–∫—Ç Car.prototype
//   //    —Ç–æ–µ—Å—Ç—å Car.prototype —ç—Ç–æ –ü–†–û–¢–û–¢–ò–ü –±—É–¥—É—â–µ–≥–æ –æ–±—å–µ–∫—Ç–∞ (—ç–∫–∑–µ–º–ø–ª—è—Ä–∞)

//   // 4. –°—Å—ã–ª–∫–∞ –Ω–∞ –æ–±—å–µ–∫—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –º–µ—Å—Ç–æ –≤—ã–∑–æ–≤–∞ new Car
// };

// Car.prototype.sayHi = function () {
//     console.log('Car.prototype.sayHi->this', this);
//     console.log('Hello :)');
// };


// Car.prototype.changePrice = function (newPrice) {
//     this.price = newPrice;
// };
// //  1. –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ new, —Å–æ–∑–¥–∞—ë—Ç—Å—è –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç
// const myCar = new Car({
    
//     brand: 'Audi',
//     model: 'Q3',
//     price: 35000,
// });
// console.log(myCar);

// myCar.sayHi();
// myCar.changePrice(10000);

// const myCar2 = new Car({
    
//     brand: 'BMW',
//     model: 'X6',
//     price: 50000,
// });
// console.log(myCar2);

// const myCar3 = new Car({
    
//     brand: 'Audi',
//     model: 'A6',
//     price: 65000,
// });
// console.log(myCar3);
// myCar3.changePrice(70000);
// console.log('new price', myCar3);

// =======================================================

// const User = function ({ email, password } = {}) {
//     this.email = email;
//     this.password = password;
// };
// console.log(User.prototype);

// User.prototype.changeEmail = function (newMail) {
//     this.email = newMail;
// };

// const mango = new User({ email: 'mango@mail.com', password: 111111 });

// console.log(mango);

// mango.changeEmail('my-new-mail@mail.com');
// console.log(mango);


// =======================================================


/*
 * –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –∏ –º–µ—Ç–æ–¥—ã
 * - –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –∏ –º–µ—Ç–æ–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–∞–º–æ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ
 * - –í —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö –º–µ—Ç–æ–¥–∞—Ö –Ω–µ –Ω—É–∂–µ–Ω this
 */

// User.message ='–Ø —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ, –º–µ–Ω—è –Ω–µ—Ç –Ω–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞—Ö –∏–ª–∏ –≤ –ø—Ä–æ—Ç–æ—Ç–∏–ø–µ.';
// User.logInfo = function (obj) {
//     console.log('User.logInfo->obj', obj);
//     console.log('–ü–æ—á—Ç–∞:', obj.email);
//     console.log('–ü–∞—Ä–æ–ª—å:', obj.password);
    
// };
// User.logInfo(mango);




// 1. –£ –∫–∞–∂–¥–æ–≥–æ –æ–±—å–µ–∫—Ç–∞ –µ—Å—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ __proto__
// 2. –í —ç—Ç–æ–º —Å–≤–æ–π—Å—Ç–≤–µ –ª–µ–∂–∏—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –µ–≥–æ –ü–†–û–¢–û–¢–ò–ü, —Ç–æ –µ—Å—Ç—å –¥—Ä—É–≥–æ–π –æ–±—å–µ–∫—Ç
// 3. –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ª–∏—Ç–µ—Ä–∞ –æ–±—å–µ–∫—Ç–∞, –≤ —Å–≤–æ–π—Å—Ç–≤–æ __proto__ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –§—É–Ω–∫—Ü–∏—è.prototype
// 4. –§—É–Ω–∫—Ü–∏—è-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è :)
// 5. –í—Å—é –º–∞–≥–∏—é –¥–µ–ª–∞–µ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä new
// 6. –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ new, —Å–æ–∑–¥–∞—ë—Ç—Å—è –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç
// 7. –§—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
// 8. –í —Å–≤–æ–π—Å—Ç–≤–æ this.__proto__ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–±—å–µ–∫—Ç –§—É–Ω–∫—Ü–∏—è.prototype
// 9. –°—Å—ã–ª–∫–∞ –Ω–∞ –æ–±—å–µ–∫—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –º–µ—Å—Ç–æ –≤—ã–∑–æ–≤–∞ new –§—É–Ω—É–∫—Ü–∏—è()

// ======================================================

/*
 * –ö–ª–∞—Å—Å—ã
 * üê∑ - –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
 * üê∑ - –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
 * üê∑ - –º–µ—Ç–æ–¥—ã
 * üê∑ - static
 * üê∑ - –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
 * üê∑ - —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –ø—É–±–ª–∏—á–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤–∞ –∏ –º–µ—Ç–æ–¥—ã –∫–ª–∞—Å—Å–æ–≤
 * üê∑ - –≥–µ—Ç—Ç–µ—Ä—ã –∏ —Å–µ—Ç—Ç–µ—Ä—ã
 */

 

// class Car {
//     static description = '–ö–ª–∞—Å—Å –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å';

//     static logInfo(carObj) {
//         console.log('Car.logInfo-> carObj', carObj);
//     }
//     constructor({ brand, model, price } = {}) {
//         this.brand = brand;
//         this._model = model;
//         this._price = price;

//     }
//     get price(){
//         return this._price;
//     }

//     set price(newPrice) {
//         this._price = newPrice;
//     }

//       get model(){
//         return this._model;
//     }

//     set model(newModel) {
//         this._model = newModel;
//     }

// };
// const carInstance = new Car({
//     brand: 'Audi',
//     model: 'Q3',
//     price: 35000,
// });


// console.log(carInstance);


// console.log(carInstance.model);
// carInstance.model = 'Q4';
// console.log(carInstance.model);


// console.log(carInstance.price);
// carInstance.price = 50000;
// console.log(carInstance.price);

// console.log(carInstance);

// ======================================================

/*
 * –ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ
 *  - extends
 *  - super()
 */


class Hero{ 
    constructor({ name = 'hero', xp = 0 } = {}){
    this.name = name;
    this.xp = xp;
    }

    gainXp(amount) {
        console.log(`${this.name} –ø–æ–ª—É—á–∞–µ—Ç ${amount} –æ–ø—ã—Ç–∞`);
        this.xp += amount;
    }
}

class Warrior extends Hero {
    constructor({ weapon, ...restProps } = {}) {
        super(restProps);
        this.weapon = weapon;
    }

    attack() {
        console.log(`${this.name} –∞—Ç–∞–∫—É–µ—Ç –∏—Å–ø–æ–ª—å–∑—É—è ${this.weapon}`);
    
    }
}
 
class Berserk extends Warrior{
    constructor({ warcry, ...restProps } = {}) {
        super(restProps);

        this.warcry = warcry;
    }

    babyRege() {
        console.log(this.warcry);
    }
}

const ajax = new Berserk({
    name: 'ajax',
    xp: 500,
    weapon: 'axe',
    warcry: 'waaaaaaaaaah',
});


console.log(ajax);

ajax.babyRege();
ajax.attack();
ajax.gainXp();


class Mage extends Hero {
    constructor({ spells, ...restProps } = {}) {
        super(restProps);

        this.spells = spells;
    }

    cast() {
console.log(`${this.name} —á—Ç–æ-—Ç–æ —Ç–∞–º –∫–∞—Å—Ç—É–µ—Ç üßô‚Äç‚ôÇÔ∏è`);
        
    }
}

 const mango = new Warrior({ name: 'mango', xp: 1000, weapon: '–∞–ª–µ–±–∞—Ä–¥–∞' });
console.log(mango);
mango.attack();
mango.gainXp(1000);


const poly = new Mage({ name: 'poly', xp: 500, spells: ['—Ñ–∞–µ—Ä–±–æ–ª'] });

console.log(
    'Warrior.prototype.__proto__ === Hero.prototype ',
    Warrior.prototype.__proto__ === Hero.prototype,
);

console.log(
    'Hero.prototype.__proto__ === Object.prototype ',
    Hero.prototype.__proto__ === Object.prototype,
);


console.log(poly);
